from sympy import *

R =  [0.7500493762604046, 0.7637926446463494, 0.7777877330216258, 0.79203925552206, 0.8065519108289879, 0.8213304837183959, 0.8363798466384457, 0.8517049613159049, 0.867310880392013, 0.8832027490883203, 0.8993858069030513, 0.9158653893385504, 0.9326469296603807, 0.9497359606886524, 0.9671381166221782, 0.9848591348960486, 1.0029048580732474, 1.0212812357709247, 1.0399943266219678, 1.0590503002725122, 1.0784554394160548, 1.0982161418648375, 1.118338922659185, 1.138830416215494, 1.1596973785135773, 1.18094668932409, 1.2025853544767682, 1.2246205081702268, 1.2470594153240837, 1.2699094739741799, 1.293178217711688, 1.3168733181669134, 1.3410025875386062, 1.3655739811696184, 1.390595600169754, 1.4160756940866799, 1.4420226636257754, 1.4684450634198172, 1.4953516048494144, 1.5227511589151241, 1.5506527591621901, 1.5790656046588751, 1.6079990630293635, 1.6374626735422368, 1.6674661502555415, 1.6980193852194805, 1.7291324517377922]
P =  [0.0, 0.010416666666666666, 0.0, 0.0, 0.0, 0.0, 0.03125, 0.0, 0.03125, 0.020833333333333332, 0.0, 0.03125, 0.041666666666666664, 0.0625, 0.052083333333333336, 0.052083333333333336, 0.09375, 0.125, 0.08333333333333333, 0.041666666666666664, 0.0625, 0.020833333333333332, 0.0625, 0.0625, 0.0, 0.041666666666666664, 0.020833333333333332, 0.010416666666666666, 0.010416666666666666, 0.010416666666666666, 0.0, 0.0, 0.010416666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.010416666666666666, 0.0, 0.0, 0.0, 0.0]
n = len(R)
a, l, m, r = symbols('A L M r')
M = 0.3
s = 1.051 ** (1 / 12)
mu = 0.015
lam = 0.015
F = ((1 - a - (1 + lam) * l + (1 - mu) * m) * s + (a + l - m) * r) ** M
Fbuy = F.subs(m, 0)
Fsell = F.subs(l, 0)

def border(n):

    global Fbuy
    global Fsell
    down = [0] * n
    up = [0] * n
    for t in range(n):
        print(t+1, '=='*42)
        if t > 0:
            Fbuy = Fbuy * (Fbuy.subs(a, (r - s) * (a + (1 + lam) * l)))
            Fsell = Fsell * (Fsell.subs(a, (r - s) * (a - (1 - mu) * m)))
        '''print(simplify(Fbuy))
                                print("**" * 44)
                                print(Fsell)'''
        Jbuy = diff(Fbuy, l).subs(l, 0)
        Jsell = diff(Fsell, m).subs(m, 0)
        '''print(Jbuy)
                                print('**' * 42)
                                print(Jsell)'''
        down[t], up[t] = immod(Jbuy, Jsell)
    return up, down

def immod(funbuy, funsell):
    FUNsell = 0
    FUNbuy = 0
    for i in range(n):
        FUNsell += P[i] * funsell.subs(r, R[i])
        FUNbuy += P[i] * funbuy.subs(r, R[i])
    A = FUNbuy.subs(a, 0)
    B = FUNbuy.subs(a, 1)
    if A * B >= 0:
        if abs(A) > abs(B):
            boderbuy = 1
        else:
            boderbuy = 0
    else:
        x = 0
        y = 1
        while (abs(x - y) > 0.0001):
            v = (x + y) / 2
            if FUNbuy.subs(a, x) * FUNbuy.subs(a, v) < 0:
                y = v
            else:
                x = v
        boderbuy = (x + y) / 2
    A = FUNsell.subs(a, 0)
    B = FUNsell.subs(a, 1)
    if A * B >= 0:
        if abs(A) > abs(B):
            bodersell = 1
        else:
            bodersell = 0
    else:
        x = 0
        y = 1
        while (abs(x - y) > 0.0001):
            v = (x + y) / 2
            if FUNsell.subs(a, x) * FUNsell.subs(a, v) < 0:
                y = v
            else:
                x = v
        bodersell = (x + y) / 2
    return(boderbuy, bodersell)


UP, DOWN = border(3)
print(UP[::-1])
print(DOWN[::-1])
